# This file was automagically generated by mbed.org. For more information, 
# see http://mbed.org/handbook/Exporting-to-GCC-ARM-Embedded

###############################################################################
# This file was modified to enable compiling IoT2 library, and benchmarks
###############################################################################

# Customize this variable through the command line when calling make to add
# a special suffix to the generated binary file. This can be helpful when 
# evaluating multiple defenses.
CUSTOM_BIN_SUFFIX ?=

# Directory to copy the resulting binary after compilation to a separate dir
BINSDIR := ../bins

ifeq ($(BOARD),)
$(error [ERROR]: The value <BOARD> has not been specified. Please use BOARD=<YOUR_BOARD> when calling make)
endif

###############################################################################
# Boiler-plate

# cross-platform directory manipulation
ifeq ($(shell echo $$OS),$$OS)
    MAKEDIR = if not exist "$(1)" mkdir "$(1)"
    RM = rmdir /S /Q "$(1)"
else
    MAKEDIR = '$(SHELL)' -c "mkdir -p \"$(1)\""
    RM = '$(SHELL)' -c "rm -rf \"$(1)\""
endif

OBJDIR := BUILD

# Move to the build directory
ifeq (,$(filter $(OBJDIR),$(notdir $(CURDIR))))
.SUFFIXES:
mkfile_path := $(abspath $(lastword $(MAKEFILE_LIST)))
MAKETARGET = '$(MAKE)' --no-print-directory -C $(OBJDIR) -f '$(mkfile_path)' \
		'SRCDIR=$(CURDIR)' $(MAKECMDGOALS)
.PHONY: $(OBJDIR) clean
all:
	+@$(call MAKEDIR,$(OBJDIR))
	+@$(MAKETARGET)
$(OBJDIR): all
Makefile : ;
% :: $(OBJDIR) ; :
clean :
	$(call RM,$(OBJDIR))

else

# trick rules into thinking we are in the root, when we are in the bulid dir
VPATH = ..

# Boiler-plate
###############################################################################
# Project settings

PROJECT := connected_display



################################################################################

# Project settings
###############################################################################
# Objects and Paths

OBJECTS += ./LibJPEG_setup.o
OBJECTS += ./connected_display.o
OBJECTS += ./mbed-os/drivers/AnalogIn.o
OBJECTS += ./mbed-os/drivers/BusIn.o
OBJECTS += ./mbed-os/drivers/BusInOut.o
OBJECTS += ./mbed-os/drivers/BusOut.o
OBJECTS += ./mbed-os/drivers/CAN.o
OBJECTS += ./mbed-os/drivers/Ethernet.o
OBJECTS += ./mbed-os/drivers/FlashIAP.o
OBJECTS += ./mbed-os/drivers/I2C.o
OBJECTS += ./mbed-os/drivers/I2CSlave.o
OBJECTS += ./mbed-os/drivers/InterruptIn.o
OBJECTS += ./mbed-os/drivers/InterruptManager.o
OBJECTS += ./mbed-os/drivers/RawSerial.o
OBJECTS += ./mbed-os/drivers/SPI.o
OBJECTS += ./mbed-os/drivers/SPISlave.o
OBJECTS += ./mbed-os/drivers/Serial.o
OBJECTS += ./mbed-os/drivers/SerialBase.o
OBJECTS += ./mbed-os/drivers/Ticker.o
OBJECTS += ./mbed-os/drivers/Timeout.o
OBJECTS += ./mbed-os/drivers/Timer.o
OBJECTS += ./mbed-os/drivers/TimerEvent.o
OBJECTS += ./mbed-os/drivers/UARTSerial.o
OBJECTS += ./mbed-os/features/mbedtls/platform/src/mbed_trng.o
OBJECTS += ./mbed-os/features/mbedtls/src/aes.o
OBJECTS += ./mbed-os/features/mbedtls/src/aesni.o
OBJECTS += ./mbed-os/features/mbedtls/src/arc4.o
OBJECTS += ./mbed-os/features/mbedtls/src/asn1parse.o
OBJECTS += ./mbed-os/features/mbedtls/src/asn1write.o
OBJECTS += ./mbed-os/features/mbedtls/src/base64.o
OBJECTS += ./mbed-os/features/mbedtls/src/bignum.o
OBJECTS += ./mbed-os/features/mbedtls/src/blowfish.o
OBJECTS += ./mbed-os/features/mbedtls/src/camellia.o
OBJECTS += ./mbed-os/features/mbedtls/src/ccm.o
OBJECTS += ./mbed-os/features/mbedtls/src/certs.o
OBJECTS += ./mbed-os/features/mbedtls/src/cipher.o
OBJECTS += ./mbed-os/features/mbedtls/src/cipher_wrap.o
OBJECTS += ./mbed-os/features/mbedtls/src/cmac.o
OBJECTS += ./mbed-os/features/mbedtls/src/ctr_drbg.o
OBJECTS += ./mbed-os/features/mbedtls/src/debug.o
OBJECTS += ./mbed-os/features/mbedtls/src/des.o
OBJECTS += ./mbed-os/features/mbedtls/src/dhm.o
OBJECTS += ./mbed-os/features/mbedtls/src/ecdh.o
OBJECTS += ./mbed-os/features/mbedtls/src/ecdsa.o
OBJECTS += ./mbed-os/features/mbedtls/src/ecjpake.o
OBJECTS += ./mbed-os/features/mbedtls/src/ecp.o
OBJECTS += ./mbed-os/features/mbedtls/src/ecp_curves.o
OBJECTS += ./mbed-os/features/mbedtls/src/entropy.o
OBJECTS += ./mbed-os/features/mbedtls/src/entropy_poll.o
OBJECTS += ./mbed-os/features/mbedtls/src/error.o
OBJECTS += ./mbed-os/features/mbedtls/src/gcm.o
OBJECTS += ./mbed-os/features/mbedtls/src/havege.o
OBJECTS += ./mbed-os/features/mbedtls/src/hmac_drbg.o
OBJECTS += ./mbed-os/features/mbedtls/src/md.o
OBJECTS += ./mbed-os/features/mbedtls/src/md2.o
OBJECTS += ./mbed-os/features/mbedtls/src/md4.o
OBJECTS += ./mbed-os/features/mbedtls/src/md5.o
OBJECTS += ./mbed-os/features/mbedtls/src/md_wrap.o
OBJECTS += ./mbed-os/features/mbedtls/src/memory_buffer_alloc.o
OBJECTS += ./mbed-os/features/mbedtls/src/net_sockets.o
OBJECTS += ./mbed-os/features/mbedtls/src/oid.o
OBJECTS += ./mbed-os/features/mbedtls/src/padlock.o
OBJECTS += ./mbed-os/features/mbedtls/src/pem.o
OBJECTS += ./mbed-os/features/mbedtls/src/pk.o
OBJECTS += ./mbed-os/features/mbedtls/src/pk_wrap.o
OBJECTS += ./mbed-os/features/mbedtls/src/pkcs11.o
OBJECTS += ./mbed-os/features/mbedtls/src/pkcs12.o
OBJECTS += ./mbed-os/features/mbedtls/src/pkcs5.o
OBJECTS += ./mbed-os/features/mbedtls/src/pkparse.o
OBJECTS += ./mbed-os/features/mbedtls/src/pkwrite.o
OBJECTS += ./mbed-os/features/mbedtls/src/platform.o
OBJECTS += ./mbed-os/features/mbedtls/src/ripemd160.o
OBJECTS += ./mbed-os/features/mbedtls/src/rsa.o
OBJECTS += ./mbed-os/features/mbedtls/src/sha1.o
OBJECTS += ./mbed-os/features/mbedtls/src/sha256.o
OBJECTS += ./mbed-os/features/mbedtls/src/sha512.o
OBJECTS += ./mbed-os/features/mbedtls/src/ssl_cache.o
OBJECTS += ./mbed-os/features/mbedtls/src/ssl_ciphersuites.o
OBJECTS += ./mbed-os/features/mbedtls/src/ssl_cli.o
OBJECTS += ./mbed-os/features/mbedtls/src/ssl_cookie.o
OBJECTS += ./mbed-os/features/mbedtls/src/ssl_srv.o
OBJECTS += ./mbed-os/features/mbedtls/src/ssl_ticket.o
OBJECTS += ./mbed-os/features/mbedtls/src/ssl_tls.o
OBJECTS += ./mbed-os/features/mbedtls/src/threading.o
OBJECTS += ./mbed-os/features/mbedtls/src/timing.o
OBJECTS += ./mbed-os/features/mbedtls/src/version.o
OBJECTS += ./mbed-os/features/mbedtls/src/version_features.o
OBJECTS += ./mbed-os/features/mbedtls/src/x509.o
OBJECTS += ./mbed-os/features/mbedtls/src/x509_create.o
OBJECTS += ./mbed-os/features/mbedtls/src/x509_crl.o
OBJECTS += ./mbed-os/features/mbedtls/src/x509_crt.o
OBJECTS += ./mbed-os/features/mbedtls/src/x509_csr.o
OBJECTS += ./mbed-os/features/mbedtls/src/x509write_crt.o
OBJECTS += ./mbed-os/features/mbedtls/src/x509write_csr.o
OBJECTS += ./mbed-os/features/mbedtls/src/xtea.o
OBJECTS += ./mbed-os/features/mbedtls/targets/TARGET_STM/aes_alt.o
OBJECTS += ./mbed-os/features/mbedtls/targets/TARGET_STM/md5_alt.o
OBJECTS += ./mbed-os/features/mbedtls/targets/TARGET_STM/sha1_alt.o
OBJECTS += ./mbed-os/features/mbedtls/targets/TARGET_STM/sha256_alt.o
OBJECTS += ./mbed-os/hal/mbed_flash_api.o
OBJECTS += ./mbed-os/hal/mbed_gpio.o
OBJECTS += ./mbed-os/hal/mbed_lp_ticker_api.o
OBJECTS += ./mbed-os/hal/mbed_pinmap_common.o
OBJECTS += ./mbed-os/hal/mbed_sleep_manager.o
OBJECTS += ./mbed-os/hal/mbed_ticker_api.o
OBJECTS += ./mbed-os/hal/mbed_us_ticker_api.o
OBJECTS += ./mbed-os/platform/ATCmdParser.o
OBJECTS += ./mbed-os/platform/CallChain.o
OBJECTS += ./mbed-os/platform/FileBase.o
OBJECTS += ./mbed-os/platform/FileHandle.o
OBJECTS += ./mbed-os/platform/FilePath.o
OBJECTS += ./mbed-os/platform/FileSystemHandle.o
OBJECTS += ./mbed-os/platform/LocalFileSystem.o
OBJECTS += ./mbed-os/platform/Stream.o
OBJECTS += ./mbed-os/platform/mbed_alloc_wrappers.o
OBJECTS += ./mbed-os/platform/mbed_application.o
OBJECTS += ./mbed-os/platform/mbed_assert.o
OBJECTS += ./mbed-os/platform/mbed_board.o
OBJECTS += ./mbed-os/platform/mbed_critical.o
OBJECTS += ./mbed-os/platform/mbed_error.o
OBJECTS += ./mbed-os/platform/mbed_interface.o
OBJECTS += ./mbed-os/platform/mbed_mem_trace.o
OBJECTS += ./mbed-os/platform/mbed_mktime.o
OBJECTS += ./mbed-os/platform/mbed_poll.o
OBJECTS += ./mbed-os/platform/mbed_retarget.o
OBJECTS += ./mbed-os/platform/mbed_rtc_time.o
OBJECTS += ./mbed-os/platform/mbed_sdk_boot.o
OBJECTS += ./mbed-os/platform/mbed_semihost_api.o
OBJECTS += ./mbed-os/platform/mbed_stats.o
OBJECTS += ./mbed-os/platform/mbed_wait_api_no_rtos.o
OBJECTS += ./mbed-os/platform/mbed_wait_api_rtos.o
OBJECTS += ./mbed-os/targets/TARGET_STM/TARGET_STM32F4/TARGET_STM32F469xI/TARGET_EVAL_F469NI/PeripheralPins.o
OBJECTS += ./mbed-os/targets/TARGET_STM/TARGET_STM32F4/TARGET_STM32F469xI/TARGET_EVAL_F469NI/system_clock.o
OBJECTS += ./mbed-os/targets/TARGET_STM/TARGET_STM32F4/TARGET_STM32F469xI/device/TOOLCHAIN_GCC_ARM/startup_stm32f469xx.o
OBJECTS += ./mbed-os/targets/TARGET_STM/TARGET_STM32F4/analogin_api.o
OBJECTS += ./mbed-os/targets/TARGET_STM/TARGET_STM32F4/analogout_device.o
OBJECTS += ./mbed-os/targets/TARGET_STM/TARGET_STM32F4/device/hal_init_pre.o
OBJECTS += ./mbed-os/targets/TARGET_STM/TARGET_STM32F4/device/stm32f4xx_hal.o
OBJECTS += ./mbed-os/targets/TARGET_STM/TARGET_STM32F4/device/stm32f4xx_hal_adc.o
OBJECTS += ./mbed-os/targets/TARGET_STM/TARGET_STM32F4/device/stm32f4xx_hal_adc_ex.o
OBJECTS += ./mbed-os/targets/TARGET_STM/TARGET_STM32F4/device/stm32f4xx_hal_can.o
OBJECTS += ./mbed-os/targets/TARGET_STM/TARGET_STM32F4/device/stm32f4xx_hal_cec.o
OBJECTS += ./mbed-os/targets/TARGET_STM/TARGET_STM32F4/device/stm32f4xx_hal_cortex.o
OBJECTS += ./mbed-os/targets/TARGET_STM/TARGET_STM32F4/device/stm32f4xx_hal_crc.o
OBJECTS += ./mbed-os/targets/TARGET_STM/TARGET_STM32F4/device/stm32f4xx_hal_cryp.o
OBJECTS += ./mbed-os/targets/TARGET_STM/TARGET_STM32F4/device/stm32f4xx_hal_cryp_ex.o
OBJECTS += ./mbed-os/targets/TARGET_STM/TARGET_STM32F4/device/stm32f4xx_hal_dac.o
OBJECTS += ./mbed-os/targets/TARGET_STM/TARGET_STM32F4/device/stm32f4xx_hal_dac_ex.o
OBJECTS += ./mbed-os/targets/TARGET_STM/TARGET_STM32F4/device/stm32f4xx_hal_dcmi.o
OBJECTS += ./mbed-os/targets/TARGET_STM/TARGET_STM32F4/device/stm32f4xx_hal_dcmi_ex.o
OBJECTS += ./mbed-os/targets/TARGET_STM/TARGET_STM32F4/device/stm32f4xx_hal_dfsdm.o
OBJECTS += ./mbed-os/targets/TARGET_STM/TARGET_STM32F4/device/stm32f4xx_hal_dma.o
OBJECTS += ./mbed-os/targets/TARGET_STM/TARGET_STM32F4/device/stm32f4xx_hal_dma2d.o
OBJECTS += ./mbed-os/targets/TARGET_STM/TARGET_STM32F4/device/stm32f4xx_hal_dma_ex.o
OBJECTS += ./mbed-os/targets/TARGET_STM/TARGET_STM32F4/device/stm32f4xx_hal_dsi.o
OBJECTS += ./mbed-os/targets/TARGET_STM/TARGET_STM32F4/device/stm32f4xx_hal_eth.o
OBJECTS += ./mbed-os/targets/TARGET_STM/TARGET_STM32F4/device/stm32f4xx_hal_flash.o
OBJECTS += ./mbed-os/targets/TARGET_STM/TARGET_STM32F4/device/stm32f4xx_hal_flash_ex.o
OBJECTS += ./mbed-os/targets/TARGET_STM/TARGET_STM32F4/device/stm32f4xx_hal_flash_ramfunc.o
OBJECTS += ./mbed-os/targets/TARGET_STM/TARGET_STM32F4/device/stm32f4xx_hal_fmpi2c.o
OBJECTS += ./mbed-os/targets/TARGET_STM/TARGET_STM32F4/device/stm32f4xx_hal_fmpi2c_ex.o
OBJECTS += ./mbed-os/targets/TARGET_STM/TARGET_STM32F4/device/stm32f4xx_hal_gpio.o
OBJECTS += ./mbed-os/targets/TARGET_STM/TARGET_STM32F4/device/stm32f4xx_hal_hash.o
OBJECTS += ./mbed-os/targets/TARGET_STM/TARGET_STM32F4/device/stm32f4xx_hal_hash_ex.o
OBJECTS += ./mbed-os/targets/TARGET_STM/TARGET_STM32F4/device/stm32f4xx_hal_hcd.o
OBJECTS += ./mbed-os/targets/TARGET_STM/TARGET_STM32F4/device/stm32f4xx_hal_i2c.o
OBJECTS += ./mbed-os/targets/TARGET_STM/TARGET_STM32F4/device/stm32f4xx_hal_i2c_ex.o
OBJECTS += ./mbed-os/targets/TARGET_STM/TARGET_STM32F4/device/stm32f4xx_hal_i2s.o
OBJECTS += ./mbed-os/targets/TARGET_STM/TARGET_STM32F4/device/stm32f4xx_hal_i2s_ex.o
OBJECTS += ./mbed-os/targets/TARGET_STM/TARGET_STM32F4/device/stm32f4xx_hal_irda.o
OBJECTS += ./mbed-os/targets/TARGET_STM/TARGET_STM32F4/device/stm32f4xx_hal_iwdg.o
OBJECTS += ./mbed-os/targets/TARGET_STM/TARGET_STM32F4/device/stm32f4xx_hal_lptim.o
OBJECTS += ./mbed-os/targets/TARGET_STM/TARGET_STM32F4/device/stm32f4xx_hal_ltdc.o
OBJECTS += ./mbed-os/targets/TARGET_STM/TARGET_STM32F4/device/stm32f4xx_hal_ltdc_ex.o
OBJECTS += ./mbed-os/targets/TARGET_STM/TARGET_STM32F4/device/stm32f4xx_hal_mmc.o
OBJECTS += ./mbed-os/targets/TARGET_STM/TARGET_STM32F4/device/stm32f4xx_hal_nand.o
OBJECTS += ./mbed-os/targets/TARGET_STM/TARGET_STM32F4/device/stm32f4xx_hal_nor.o
OBJECTS += ./mbed-os/targets/TARGET_STM/TARGET_STM32F4/device/stm32f4xx_hal_pccard.o
OBJECTS += ./mbed-os/targets/TARGET_STM/TARGET_STM32F4/device/stm32f4xx_hal_pcd.o
OBJECTS += ./mbed-os/targets/TARGET_STM/TARGET_STM32F4/device/stm32f4xx_hal_pcd_ex.o
OBJECTS += ./mbed-os/targets/TARGET_STM/TARGET_STM32F4/device/stm32f4xx_hal_pwr.o
OBJECTS += ./mbed-os/targets/TARGET_STM/TARGET_STM32F4/device/stm32f4xx_hal_pwr_ex.o
OBJECTS += ./mbed-os/targets/TARGET_STM/TARGET_STM32F4/device/stm32f4xx_hal_qspi.o
OBJECTS += ./mbed-os/targets/TARGET_STM/TARGET_STM32F4/device/stm32f4xx_hal_rcc.o
OBJECTS += ./mbed-os/targets/TARGET_STM/TARGET_STM32F4/device/stm32f4xx_hal_rcc_ex.o
OBJECTS += ./mbed-os/targets/TARGET_STM/TARGET_STM32F4/device/stm32f4xx_hal_rng.o
OBJECTS += ./mbed-os/targets/TARGET_STM/TARGET_STM32F4/device/stm32f4xx_hal_rtc.o
OBJECTS += ./mbed-os/targets/TARGET_STM/TARGET_STM32F4/device/stm32f4xx_hal_rtc_ex.o
OBJECTS += ./mbed-os/targets/TARGET_STM/TARGET_STM32F4/device/stm32f4xx_hal_sai.o
OBJECTS += ./mbed-os/targets/TARGET_STM/TARGET_STM32F4/device/stm32f4xx_hal_sai_ex.o
OBJECTS += ./mbed-os/targets/TARGET_STM/TARGET_STM32F4/device/stm32f4xx_hal_sd.o
OBJECTS += ./mbed-os/targets/TARGET_STM/TARGET_STM32F4/device/stm32f4xx_hal_sdram.o
OBJECTS += ./mbed-os/targets/TARGET_STM/TARGET_STM32F4/device/stm32f4xx_hal_smartcard.o
OBJECTS += ./mbed-os/targets/TARGET_STM/TARGET_STM32F4/device/stm32f4xx_hal_spdifrx.o
OBJECTS += ./mbed-os/targets/TARGET_STM/TARGET_STM32F4/device/stm32f4xx_hal_spi.o
OBJECTS += ./mbed-os/targets/TARGET_STM/TARGET_STM32F4/device/stm32f4xx_hal_sram.o
OBJECTS += ./mbed-os/targets/TARGET_STM/TARGET_STM32F4/device/stm32f4xx_hal_tim.o
OBJECTS += ./mbed-os/targets/TARGET_STM/TARGET_STM32F4/device/stm32f4xx_hal_tim_ex.o
OBJECTS += ./mbed-os/targets/TARGET_STM/TARGET_STM32F4/device/stm32f4xx_hal_uart.o
OBJECTS += ./mbed-os/targets/TARGET_STM/TARGET_STM32F4/device/stm32f4xx_hal_usart.o
OBJECTS += ./mbed-os/targets/TARGET_STM/TARGET_STM32F4/device/stm32f4xx_hal_wwdg.o
OBJECTS += ./mbed-os/targets/TARGET_STM/TARGET_STM32F4/device/stm32f4xx_ll_adc.o
OBJECTS += ./mbed-os/targets/TARGET_STM/TARGET_STM32F4/device/stm32f4xx_ll_crc.o
OBJECTS += ./mbed-os/targets/TARGET_STM/TARGET_STM32F4/device/stm32f4xx_ll_dac.o
OBJECTS += ./mbed-os/targets/TARGET_STM/TARGET_STM32F4/device/stm32f4xx_ll_dma.o
OBJECTS += ./mbed-os/targets/TARGET_STM/TARGET_STM32F4/device/stm32f4xx_ll_dma2d.o
OBJECTS += ./mbed-os/targets/TARGET_STM/TARGET_STM32F4/device/stm32f4xx_ll_exti.o
OBJECTS += ./mbed-os/targets/TARGET_STM/TARGET_STM32F4/device/stm32f4xx_ll_fmc.o
OBJECTS += ./mbed-os/targets/TARGET_STM/TARGET_STM32F4/device/stm32f4xx_ll_fsmc.o
OBJECTS += ./mbed-os/targets/TARGET_STM/TARGET_STM32F4/device/stm32f4xx_ll_gpio.o
OBJECTS += ./mbed-os/targets/TARGET_STM/TARGET_STM32F4/device/stm32f4xx_ll_i2c.o
OBJECTS += ./mbed-os/targets/TARGET_STM/TARGET_STM32F4/device/stm32f4xx_ll_lptim.o
OBJECTS += ./mbed-os/targets/TARGET_STM/TARGET_STM32F4/device/stm32f4xx_ll_pwr.o
OBJECTS += ./mbed-os/targets/TARGET_STM/TARGET_STM32F4/device/stm32f4xx_ll_rcc.o
OBJECTS += ./mbed-os/targets/TARGET_STM/TARGET_STM32F4/device/stm32f4xx_ll_rng.o
OBJECTS += ./mbed-os/targets/TARGET_STM/TARGET_STM32F4/device/stm32f4xx_ll_rtc.o
OBJECTS += ./mbed-os/targets/TARGET_STM/TARGET_STM32F4/device/stm32f4xx_ll_sdmmc.o
OBJECTS += ./mbed-os/targets/TARGET_STM/TARGET_STM32F4/device/stm32f4xx_ll_spi.o
OBJECTS += ./mbed-os/targets/TARGET_STM/TARGET_STM32F4/device/stm32f4xx_ll_tim.o
OBJECTS += ./mbed-os/targets/TARGET_STM/TARGET_STM32F4/device/stm32f4xx_ll_usart.o
OBJECTS += ./mbed-os/targets/TARGET_STM/TARGET_STM32F4/device/stm32f4xx_ll_usb.o
OBJECTS += ./mbed-os/targets/TARGET_STM/TARGET_STM32F4/device/stm32f4xx_ll_utils.o
OBJECTS += ./mbed-os/targets/TARGET_STM/TARGET_STM32F4/device/system_stm32f4xx.o
OBJECTS += ./mbed-os/targets/TARGET_STM/TARGET_STM32F4/flash_api.o
OBJECTS += ./mbed-os/targets/TARGET_STM/TARGET_STM32F4/gpio_irq_device.o
OBJECTS += ./mbed-os/targets/TARGET_STM/TARGET_STM32F4/pwmout_device.o
OBJECTS += ./mbed-os/targets/TARGET_STM/TARGET_STM32F4/serial_device.o
OBJECTS += ./mbed-os/targets/TARGET_STM/TARGET_STM32F4/spi_api.o
OBJECTS += ./mbed-os/targets/TARGET_STM/analogout_api.o
OBJECTS += ./mbed-os/targets/TARGET_STM/can_api.o
OBJECTS += ./mbed-os/targets/TARGET_STM/gpio_api.o
OBJECTS += ./mbed-os/targets/TARGET_STM/gpio_irq_api.o
OBJECTS += ./mbed-os/targets/TARGET_STM/hal_tick_16b.o
OBJECTS += ./mbed-os/targets/TARGET_STM/hal_tick_32b.o
OBJECTS += ./mbed-os/targets/TARGET_STM/i2c_api.o
OBJECTS += ./mbed-os/targets/TARGET_STM/lp_ticker.o
OBJECTS += ./mbed-os/targets/TARGET_STM/mbed_overrides.o
OBJECTS += ./mbed-os/targets/TARGET_STM/pinmap.o
OBJECTS += ./mbed-os/targets/TARGET_STM/port_api.o
OBJECTS += ./mbed-os/targets/TARGET_STM/pwmout_api.o
OBJECTS += ./mbed-os/targets/TARGET_STM/rtc_api.o
OBJECTS += ./mbed-os/targets/TARGET_STM/serial_api.o
OBJECTS += ./mbed-os/targets/TARGET_STM/sleep.o
OBJECTS += ./mbed-os/targets/TARGET_STM/stm_spi_api.o
OBJECTS += ./mbed-os/targets/TARGET_STM/trng_api.o
OBJECTS += ./mbed-os/targets/TARGET_STM/us_ticker_16b.o
OBJECTS += ./mbed-os/targets/TARGET_STM/us_ticker_32b.o
OBJECTS += ./securedata_main.o


INCLUDE_PATHS += -I../
INCLUDE_PATHS += -I../.
INCLUDE_PATHS += -I.././mbed-os
INCLUDE_PATHS += -I.././mbed-os/cmsis
INCLUDE_PATHS += -I.././mbed-os/cmsis/TARGET_CORTEX_M
INCLUDE_PATHS += -I.././mbed-os/cmsis/TARGET_CORTEX_M/TOOLCHAIN_GCC
INCLUDE_PATHS += -I.././mbed-os/cmsis/TOOLCHAIN_GCC
INCLUDE_PATHS += -I.././mbed-os/drivers
INCLUDE_PATHS += -I.././mbed-os/features
INCLUDE_PATHS += -I.././mbed-os/features/mbedtls
INCLUDE_PATHS += -I.././mbed-os/features/mbedtls/importer
INCLUDE_PATHS += -I.././mbed-os/features/mbedtls/inc
INCLUDE_PATHS += -I.././mbed-os/features/mbedtls/inc/mbedtls
INCLUDE_PATHS += -I.././mbed-os/features/mbedtls/platform
INCLUDE_PATHS += -I.././mbed-os/features/mbedtls/platform/inc
INCLUDE_PATHS += -I.././mbed-os/features/mbedtls/platform/src
INCLUDE_PATHS += -I.././mbed-os/features/mbedtls/src
INCLUDE_PATHS += -I.././mbed-os/features/mbedtls/targets
INCLUDE_PATHS += -I.././mbed-os/features/mbedtls/targets/TARGET_STM
INCLUDE_PATHS += -I.././mbed-os/features/mbedtls/targets/TARGET_STM/TARGET_STM32F4
INCLUDE_PATHS += -I.././mbed-os/features/nanostack
INCLUDE_PATHS += -I.././mbed-os/hal
INCLUDE_PATHS += -I.././mbed-os/hal/storage_abstraction
INCLUDE_PATHS += -I.././mbed-os/platform
INCLUDE_PATHS += -I.././mbed-os/targets
INCLUDE_PATHS += -I.././mbed-os/targets/TARGET_STM
INCLUDE_PATHS += -I.././mbed-os/targets/TARGET_STM/TARGET_STM32F4
INCLUDE_PATHS += -I.././mbed-os/targets/TARGET_STM/TARGET_STM32F4/TARGET_STM32F469xI
INCLUDE_PATHS += -I.././mbed-os/targets/TARGET_STM/TARGET_STM32F4/TARGET_STM32F469xI/TARGET_EVAL_F469NI
INCLUDE_PATHS += -I.././mbed-os/targets/TARGET_STM/TARGET_STM32F4/TARGET_STM32F469xI/device
INCLUDE_PATHS += -I.././mbed-os/targets/TARGET_STM/TARGET_STM32F4/TARGET_STM32F469xI/device/TOOLCHAIN_GCC_ARM
INCLUDE_PATHS += -I.././mbed-os/targets/TARGET_STM/TARGET_STM32F4/device



LIBRARY_PATHS :=
LIBRARIES :=

# IoT2 modifications
#-------------------------------------------------------------------------------
# LINKER_SCRIPT is set be mbed tools automatically. The goal of the modifications
# below is to allow choosing a custom linker script from the generated makefile
# note that for this to work customized linker scripts MUST use the same linker
# script name with and additional suffix that follows this pattern
# <dafault_linker_script>--<YOUR_CUSTOM_SUFFIX>.ld
# Then, to use your customized linker script set the CUSTOM_LINKER variable to
# your chosen suffix. For example, your using board named <abc> that has
# <abc.ld> for its linker script, and you added your own <abc--XYZ.ld> linker
# script, to use it when calling make:
# 		make BOARD=abc <..other rules..> CUSTOM_LINKER=XYZ iot2benchmark
#-------------------------------------------------------------------------------

LINKER_SCRIPT ?= .././mbed-os/targets/TARGET_STM/TARGET_STM32F4/TARGET_STM32F469xI/device/TOOLCHAIN_GCC_ARM/STM32F469XI--clang.ld
# remove .ld extension and the suffix if tools picked a custom linker file
DEFAULT_LINKER_SCRIPT_NO_LD_EXT = $(LINKER_SCRIPT:%.ld=%)
LINKER_PREFIX = $(firstword $(subst --, ,$(DEFAULT_LINKER_SCRIPT_NO_LD_EXT)))
LINKER_SCRIPT := $(LINKER_PREFIX).ld
CUSTOM_LINKER ?= 
CUSTOM_LINKER_SCRIPT = $(LINKER_PREFIX)--$(CUSTOM_LINKER).ld

# Switch to the custom linker script if the flag is set
ifneq ($(CUSTOM_LINKER),)
LINKER_SCRIPT := $(CUSTOM_LINKER_SCRIPT)
endif

# Objects and Paths
###############################################################################

AS      = 'arm-none-eabi-gcc' '-x' 'assembler-with-cpp' '-c' '-Wall' '-Wextra' '-Wno-unused-parameter' '-Wno-missing-field-initializers' '-fmessage-length=0' '-fno-exceptions' '-fno-builtin' '-ffunction-sections' '-fdata-sections' '-funsigned-char' '-MMD' '-fno-delete-null-pointer-checks' '-fomit-frame-pointer' '-Os' '-DNDEBUG' '-mcpu=cortex-m4' '-mthumb' '-mfpu=fpv4-sp-d16' '-mfloat-abi=softfp'
CC      = 'arm-none-eabi-gcc' '-std=gnu99' '-c' '-Wall' '-Wextra' '-Wno-unused-parameter' '-Wno-missing-field-initializers' '-fmessage-length=0' '-fno-exceptions' '-fno-builtin' '-ffunction-sections' '-fdata-sections' '-funsigned-char' '-MMD' '-fno-delete-null-pointer-checks' '-fomit-frame-pointer' '-Os' '-DNDEBUG' '-mcpu=cortex-m4' '-mthumb' '-mfpu=fpv4-sp-d16' '-mfloat-abi=softfp'
CPP     = 'arm-none-eabi-g++' '-std=gnu++98' '-fno-rtti' '-Wvla' '-c' '-Wall' '-Wextra' '-Wno-unused-parameter' '-Wno-missing-field-initializers' '-fmessage-length=0' '-fno-exceptions' '-fno-builtin' '-ffunction-sections' '-fdata-sections' '-funsigned-char' '-MMD' '-fno-delete-null-pointer-checks' '-fomit-frame-pointer' '-Os' '-DNDEBUG' '-mcpu=cortex-m4' '-mthumb' '-mfpu=fpv4-sp-d16' '-mfloat-abi=softfp'
LD      = 'arm-none-eabi-gcc'
ELF2BIN = 'arm-none-eabi-objcopy'
PREPROC = 'arm-none-eabi-cpp' '-E' '-P' '-Wl,--gc-sections' '-Wl,--wrap,main' '-Wl,--wrap,_malloc_r' '-Wl,--wrap,_free_r' '-Wl,--wrap,_realloc_r' '-Wl,--wrap,_memalign_r' '-Wl,--wrap,_calloc_r' '-Wl,--wrap,exit' '-Wl,--wrap,atexit' '-Wl,-n' '-mcpu=cortex-m4' '-mthumb' '-mfpu=fpv4-sp-d16' '-mfloat-abi=softfp'


C_FLAGS += -std=gnu99
C_FLAGS += -DDEVICE_SPISLAVE=1
C_FLAGS += -DFEATURE_LWIP=1
C_FLAGS += -D__MBED__=1
C_FLAGS += -DDEVICE_I2CSLAVE=1
C_FLAGS += -D__FPU_PRESENT=1
C_FLAGS += -DDEVICE_PORTOUT=1
C_FLAGS += -DDEVICE_PORTINOUT=1
C_FLAGS += -DTARGET_RTOS_M4_M7
C_FLAGS += -DDEVICE_LOWPOWERTIMER=1
C_FLAGS += -DDEVICE_RTC=1
C_FLAGS += -DTOOLCHAIN_object
C_FLAGS += -DTARGET_STM32F4
C_FLAGS += -D__CMSIS_RTOS
C_FLAGS += -DTARGET_LIKE_MBED
C_FLAGS += -DTOOLCHAIN_GCC
C_FLAGS += -DDEVICE_CAN=1
C_FLAGS += -DTARGET_CORTEX_M
C_FLAGS += -DDEVICE_I2C_ASYNCH=1
C_FLAGS += -DTARGET_LIKE_CORTEX_M4
C_FLAGS += -DDEVICE_ANALOGOUT=1
C_FLAGS += -DTARGET_M4
C_FLAGS += -DTARGET_UVISOR_UNSUPPORTED
C_FLAGS += -DUSE_STM32469I_EVAL
C_FLAGS += -DTARGET_STM32F469NI
C_FLAGS += -DDEVICE_PWMOUT=1
C_FLAGS += -DDEVICE_SPI_ASYNCH=1
C_FLAGS += -DDEVICE_INTERRUPTIN=1
C_FLAGS += -DTARGET_CORTEX
C_FLAGS += -DDEVICE_I2C=1
C_FLAGS += -DTRANSACTION_QUEUE_SIZE_SPI=2
C_FLAGS += -DUSE_IOEXPANDER
C_FLAGS += -D__CORTEX_M4
C_FLAGS += -DDEVICE_STDIO_MESSAGES=1
C_FLAGS += -DTARGET_FAMILY_STM32
C_FLAGS += -DUSE_HAL_DRIVER
C_FLAGS += -DTARGET_FF_ARDUINO
C_FLAGS += -DDEVICE_PORTIN=1
C_FLAGS += -DTARGET_RELEASE
C_FLAGS += -DTARGET_STM
C_FLAGS += -DSTM32F469xx
C_FLAGS += -DDEVICE_SERIAL_FC=1
C_FLAGS += -DTARGET_STM32F469xx
C_FLAGS += -DDEVICE_TRNG=1
C_FLAGS += -DTARGET_STM32F469
C_FLAGS += -D__MBED_CMSIS_RTOS_CM
C_FLAGS += -DDEVICE_SLEEP=1
C_FLAGS += -DTOOLCHAIN_GCC_ARM
C_FLAGS += -DDEVICE_SPI=1
C_FLAGS += -DUSB_STM_HAL
C_FLAGS += -DTARGET_STM32F469xI
C_FLAGS += -DMBED_BUILD_TIMESTAMP=1543800841.04
C_FLAGS += -DDEVICE_ANALOGIN=1
C_FLAGS += -DDEVICE_SERIAL=1
C_FLAGS += -DTARGET_EVAL_F469NI
C_FLAGS += -DDEVICE_FLASH=1
C_FLAGS += -DARM_MATH_CM4
C_FLAGS += -include
C_FLAGS += mbed_config.h

CXX_FLAGS += -std=gnu++98
CXX_FLAGS += -fno-rtti
CXX_FLAGS += -Wvla
CXX_FLAGS += -DDEVICE_SPISLAVE=1
CXX_FLAGS += -DFEATURE_LWIP=1
CXX_FLAGS += -D__MBED__=1
CXX_FLAGS += -DDEVICE_I2CSLAVE=1
CXX_FLAGS += -D__FPU_PRESENT=1
CXX_FLAGS += -DDEVICE_PORTOUT=1
CXX_FLAGS += -DDEVICE_PORTINOUT=1
CXX_FLAGS += -DTARGET_RTOS_M4_M7
CXX_FLAGS += -DDEVICE_LOWPOWERTIMER=1
CXX_FLAGS += -DDEVICE_RTC=1
CXX_FLAGS += -DTOOLCHAIN_object
CXX_FLAGS += -DTARGET_STM32F4
CXX_FLAGS += -D__CMSIS_RTOS
CXX_FLAGS += -DTARGET_LIKE_MBED
CXX_FLAGS += -DTOOLCHAIN_GCC
CXX_FLAGS += -DDEVICE_CAN=1
CXX_FLAGS += -DTARGET_CORTEX_M
CXX_FLAGS += -DDEVICE_I2C_ASYNCH=1
CXX_FLAGS += -DTARGET_LIKE_CORTEX_M4
CXX_FLAGS += -DDEVICE_ANALOGOUT=1
CXX_FLAGS += -DTARGET_M4
CXX_FLAGS += -DTARGET_UVISOR_UNSUPPORTED
CXX_FLAGS += -DUSE_STM32469I_EVAL
CXX_FLAGS += -DTARGET_STM32F469NI
CXX_FLAGS += -DDEVICE_PWMOUT=1
CXX_FLAGS += -DDEVICE_SPI_ASYNCH=1
CXX_FLAGS += -DDEVICE_INTERRUPTIN=1
CXX_FLAGS += -DTARGET_CORTEX
CXX_FLAGS += -DDEVICE_I2C=1
CXX_FLAGS += -DTRANSACTION_QUEUE_SIZE_SPI=2
CXX_FLAGS += -DUSE_IOEXPANDER
CXX_FLAGS += -D__CORTEX_M4
CXX_FLAGS += -DDEVICE_STDIO_MESSAGES=1
CXX_FLAGS += -DTARGET_FAMILY_STM32
CXX_FLAGS += -DUSE_HAL_DRIVER
CXX_FLAGS += -DTARGET_FF_ARDUINO
CXX_FLAGS += -DDEVICE_PORTIN=1
CXX_FLAGS += -DTARGET_RELEASE
CXX_FLAGS += -DTARGET_STM
CXX_FLAGS += -DSTM32F469xx
CXX_FLAGS += -DDEVICE_SERIAL_FC=1
CXX_FLAGS += -DTARGET_STM32F469xx
CXX_FLAGS += -DDEVICE_TRNG=1
CXX_FLAGS += -DTARGET_STM32F469
CXX_FLAGS += -D__MBED_CMSIS_RTOS_CM
CXX_FLAGS += -DDEVICE_SLEEP=1
CXX_FLAGS += -DTOOLCHAIN_GCC_ARM
CXX_FLAGS += -DDEVICE_SPI=1
CXX_FLAGS += -DUSB_STM_HAL
CXX_FLAGS += -DTARGET_STM32F469xI
CXX_FLAGS += -DMBED_BUILD_TIMESTAMP=1543800841.04
CXX_FLAGS += -DDEVICE_ANALOGIN=1
CXX_FLAGS += -DDEVICE_SERIAL=1
CXX_FLAGS += -DTARGET_EVAL_F469NI
CXX_FLAGS += -DDEVICE_FLASH=1
CXX_FLAGS += -DARM_MATH_CM4
CXX_FLAGS += -include
CXX_FLAGS += mbed_config.h

ASM_FLAGS += -x
ASM_FLAGS += assembler-with-cpp
ASM_FLAGS += -DTRANSACTION_QUEUE_SIZE_SPI=2
ASM_FLAGS += -DSTM32F469xx
ASM_FLAGS += -D__CORTEX_M4
ASM_FLAGS += -DUSB_STM_HAL
ASM_FLAGS += -DARM_MATH_CM4
ASM_FLAGS += -D__FPU_PRESENT=1
ASM_FLAGS += -D__MBED_CMSIS_RTOS_CM
ASM_FLAGS += -DUSE_IOEXPANDER
ASM_FLAGS += -DUSE_STM32469I_EVAL
ASM_FLAGS += -D__CMSIS_RTOS
ASM_FLAGS += -DUSE_HAL_DRIVER
ASM_FLAGS += -I.
ASM_FLAGS += -I./mbed-os
ASM_FLAGS += -I./mbed-os/features
ASM_FLAGS += -I./mbed-os/features/mbedtls
ASM_FLAGS += -I./mbed-os/features/mbedtls/importer
ASM_FLAGS += -I./mbed-os/features/mbedtls/inc
ASM_FLAGS += -I./mbed-os/features/mbedtls/inc/mbedtls
ASM_FLAGS += -I./mbed-os/features/mbedtls/src
ASM_FLAGS += -I./mbed-os/features/mbedtls/platform
ASM_FLAGS += -I./mbed-os/features/mbedtls/platform/inc
ASM_FLAGS += -I./mbed-os/features/mbedtls/platform/src
ASM_FLAGS += -I./mbed-os/features/mbedtls/targets
ASM_FLAGS += -I./mbed-os/features/mbedtls/targets/TARGET_STM
ASM_FLAGS += -I./mbed-os/features/mbedtls/targets/TARGET_STM/TARGET_STM32F4
ASM_FLAGS += -I./mbed-os/features/nanostack
ASM_FLAGS += -I./mbed-os/drivers
ASM_FLAGS += -I./mbed-os/hal
ASM_FLAGS += -I./mbed-os/hal/storage_abstraction
ASM_FLAGS += -I./mbed-os/platform
ASM_FLAGS += -I./mbed-os/targets
ASM_FLAGS += -I./mbed-os/targets/TARGET_STM
ASM_FLAGS += -I./mbed-os/targets/TARGET_STM/TARGET_STM32F4
ASM_FLAGS += -I./mbed-os/targets/TARGET_STM/TARGET_STM32F4/device
ASM_FLAGS += -I./mbed-os/targets/TARGET_STM/TARGET_STM32F4/TARGET_STM32F469xI
ASM_FLAGS += -I./mbed-os/targets/TARGET_STM/TARGET_STM32F4/TARGET_STM32F469xI/device
ASM_FLAGS += -I./mbed-os/targets/TARGET_STM/TARGET_STM32F4/TARGET_STM32F469xI/device/TOOLCHAIN_GCC_ARM
ASM_FLAGS += -I./mbed-os/targets/TARGET_STM/TARGET_STM32F4/TARGET_STM32F469xI/TARGET_EVAL_F469NI
ASM_FLAGS += -I./mbed-os/cmsis
ASM_FLAGS += -I./mbed-os/cmsis/TARGET_CORTEX_M
ASM_FLAGS += -I./mbed-os/cmsis/TARGET_CORTEX_M/TOOLCHAIN_GCC
ASM_FLAGS += -I./mbed-os/cmsis/TOOLCHAIN_GCC


LD_FLAGS :=-Wl,--gc-sections -Wl,--wrap,main -Wl,--wrap,_malloc_r -Wl,--wrap,_free_r -Wl,--wrap,_realloc_r -Wl,--wrap,_memalign_r -Wl,--wrap,_calloc_r -Wl,--wrap,exit -Wl,--wrap,atexit -Wl,-n -mcpu=cortex-m4 -mthumb -mfpu=fpv4-sp-d16 -mfloat-abi=softfp 
LD_SYS_LIBS :=-Wl,--start-group -lstdc++ -lsupc++ -lm -lc -lgcc -lnosys  -Wl,--end-group


###############################################################################
# .mk file for IoT2 benchmark
###############################################################################

# The root directory is the BUILD/ directory. Since the Benchmark.mk 
# file is at the same level of the main application, ../ is used as a prefix.
include ../Benchmark.mk


# Tools and Flags
###############################################################################
# Rules

.PHONY: all lst size


all: $(PROJECT).bin $(PROJECT).hex size


.s.o:
	+@$(call MAKEDIR,$(dir $@))
	+@echo "Assemble: $(notdir $<)"
  
	@$(AS) -c $(ASM_FLAGS) -o $@ $<
  


.S.o:
	+@$(call MAKEDIR,$(dir $@))
	+@echo "Assemble: $(notdir $<)"
  
	@$(AS) -c $(ASM_FLAGS) -o $@ $<
  

.c.o:
	+@$(call MAKEDIR,$(dir $@))
	+@echo "Compile: $(notdir $<)"
	@$(CC) $(C_FLAGS) $(INCLUDE_PATHS) -o $@ $<

.cpp.o:
	+@$(call MAKEDIR,$(dir $@))
	+@echo "Compile: $(notdir $<)"
	@$(CPP) $(CXX_FLAGS) $(INCLUDE_PATHS) -o $@ $<


$(PROJECT).link_script.ld: $(LINKER_SCRIPT)
	@$(PREPROC) $< -o $@



$(PROJECT).elf: $(OBJECTS) $(SYS_OBJECTS) $(PROJECT).link_script.ld 
	+@echo "link: $(notdir $@)"
	@$(LD) $(LD_FLAGS) -T $(filter-out %.o, $^) $(LIBRARY_PATHS) --output $@ $(filter %.o, $^) $(LIBRARIES) $(LD_SYS_LIBS)


$(PROJECT).bin: $(PROJECT).elf
	$(ELF2BIN) -O binary $< $@
	+@echo "===== bin file ready to flash: $(OBJDIR)/$@ =====" 

$(PROJECT).hex: $(PROJECT).elf
	$(ELF2BIN) -O ihex $< $@




#############################
# IoT2 Rules
#############################

iot2benchmark: $(PROJECT)--iot2--$(BOARD)$(CUSTOM_BIN_SUFFIX).elf
	+@echo "-------------------------------------------------------------------"
	+@echo "Copying: $< to $(BINSDIR)/$<"
	+@echo "-------------------------------------------------------------------"
	+@$(call MAKEDIR,$(BINSDIR))
	+@ cp $< $(BINSDIR)/$<

$(IOT2LIB_OBJECTS_DIR)/%.o: $(IOT2LIB_DIR)/%.c
	+@$(call MAKEDIR,$(dir $@))
	+@echo "-------------------------------------------------------------------"
	+@echo "[IoT2 file] Compile: $(notdir $<)"
	@$(CC) $(C_FLAGS) $(INCLUDE_PATHS) -o $@ $<
	+@echo "-------------------------------------------------------------------"

$(IOT2LIB_OBJECTS_DIR)/%.o: $(IOT2LIB_DIR)/%.S
	+@$(call MAKEDIR,$(dir $@))
	+@echo "-------------------------------------------------------------------"
	+@echo "[IoT2 file] Assemble: $(notdir $<)"
	@$(AS) -c $(ASM_FLAGS) -o $@ $<
	+@echo "-------------------------------------------------------------------"

$(PROJECT)--iot2--$(BOARD)$(CUSTOM_BIN_SUFFIX).elf: $(IOT2LIB_OBJECTS) $(OBJECTS) $(SYS_OBJECTS) $(PROJECT).link_script.ld 
	+@echo "link: $(notdir $@)"
	@$(LD) $(LD_FLAGS) -T $(filter-out %.o, $^) $(LIBRARY_PATHS) --output $@ $(filter %.o, $^) $(LIBRARIES) $(LD_SYS_LIBS)




# Rules
###############################################################################
# Dependencies

DEPS = $(OBJECTS:.o=.d) $(SYS_OBJECTS:.o=.d)
-include $(DEPS)
endif

# Dependencies
###############################################################################
